/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Message_Key {
    Message_Key_TIME = 0,
    Message_Key_TEMPERATURE = 1,
    Message_Key_TEMPERATURES = 2,
    Message_Key_TIMER = 3,
    Message_Key_MODE = 4,
    Message_Key_FUNCTION = 5,
    Message_Key_BRIGHTNESS = 6,
    Message_Key_THRESHOLD = 7,
    Message_Key_ROTATION = 8,
    Message_Key_OK = 9,
    Message_Key_ERROR = 10
} Message_Key;

/* Struct definitions */
typedef struct _Message {
    bool has_value;
    uint64_t value;
    Message_Key key;
} Message;


/* Helper constants for enums */
#define _Message_Key_MIN Message_Key_TIME
#define _Message_Key_MAX Message_Key_ERROR
#define _Message_Key_ARRAYSIZE ((Message_Key)(Message_Key_ERROR+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Message_init_default                     {false, 0, _Message_Key_MIN}
#define Message_init_zero                        {false, 0, _Message_Key_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Message_value_tag                        1
#define Message_key_tag                          2

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT64,   value,             1) \
X(a, STATIC,   REQUIRED, UENUM,    key,               2)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg

/* Maximum encoded size of messages (where known) */
#define Message_size                             13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
